name: PDF Processing Pipeline

on:
  push:
    paths:
      - 'DATA/raw_pdfs/**/*.pdf'  # Trigger on PDF files in DATA/raw_pdfs/
  workflow_dispatch:  # Allow manual triggering

jobs:
  process_pdfs:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Allow writing to the repository (for commits)
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for proper git operations

      - name: Debug trigger event
        continue-on-error: true
        run: |
          echo "Workflow triggered by event: ${{ github.event_name }}"
          echo "Files changed:"
          if git rev-parse HEAD^ >/dev/null 2>&1; then
            git diff --name-only HEAD^ HEAD || echo "No files changed or unable to diff"
          else
            echo "First commit, no previous HEAD to compare"
            git ls-files
          fi

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Debug OpenAI API Key
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          if [ -z "$OPENAI_API_KEY" ]; then
            echo "Error: OPENAI_API_KEY is not set or empty"
            exit 1
          else
            echo "OPENAI_API_KEY is set (length: ${#OPENAI_API_KEY})"
          fi

      - name: Process new PDFs
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          echo "Starting PDF processing..."
          python -u pdf_processor.py 2>&1 | tee processing.log
          # Check for specific error messages in the log indicating failure
          if grep -q "APIConnectionError" processing.log; then
            echo "Error: PDF processing failed due to OpenAI API connection issue"
            exit 1
          fi
          if [ ! -d "DATA/embeddings" ] || [ -z "$(ls -A DATA/embeddings)" ]; then
            echo "Error: No embeddings generated in DATA/embeddings"
            exit 1
          fi
          if [ ! -f "DATA/pdf_metadata.json" ]; then
            echo "Error: pdf_metadata.json not found"
            exit 1
          fi
          echo "PDF processing completed successfully"

      - name: Debug file state after processing
        run: |
          echo "Contents of DATA/embeddings:"
          ls -l DATA/embeddings || echo "DATA/embeddings is empty or missing"
          echo "Contents of DATA/pdf_metadata.json:"
          cat DATA/pdf_metadata.json || echo "pdf_metadata.json is missing"

      - name: Upload processing logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: processing-logs
          path: processing.log

      - name: Commit changes
        if: success()
        run: |
          git config --local user.email "ompawar2526@gmail.com"
          git config --local user.name "ompawar2526mb"
          git add DATA/embeddings/ || echo "No embeddings to add"
          git add DATA/pdf_metadata.json || echo "No metadata to add"
          git add processing.log || echo "No log to add"
          git commit -m "[Automated] Process new PDFs and update embeddings" || echo "No changes to commit"

      - name: Push changes
        if: success()
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref_name }}